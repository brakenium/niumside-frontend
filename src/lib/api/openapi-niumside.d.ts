/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


/** OneOf type helpers */
type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };
type XOR<T, U> = (T | U) extends object ? (Without<T, U> & U) | (Without<U, T> & T) : T | U;
type OneOf<T extends any[]> = T extends [infer Only] ? Only : T extends [infer A, infer B, ...infer Rest] ? OneOf<[XOR<A, B>, ...Rest]> : never;

export interface paths {
  "/api/population": {
    get: operations["population"];
  };
  "/metrics/": {
    get: operations["prom_metrics"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** @enum {string} */
    Error: "NoDataAvailable";
    PopFaction: {
      /** Format: int32 */
      faction_id: number;
      /** Format: int32 */
      faction_population: number;
      teams: components["schemas"]["PopTeam"][];
    };
    PopLoadout: {
      /** Format: int32 */
      loadout_id: number;
      /** Format: int32 */
      loadout_population: number;
    };
    PopTeam: {
      loadouts: components["schemas"]["PopLoadout"][];
      /** Format: int32 */
      team_id: number;
      /** Format: int32 */
      team_population: number;
    };
    PopWorld: {
      /** Format: date-time */
      timestamp: string;
      /** Format: int32 */
      world_id: number;
      /** Format: int32 */
      world_population: number;
      zones: components["schemas"]["PopZone"][];
    };
    PopZone: {
      factions: components["schemas"]["PopFaction"][];
      /** Format: int32 */
      zone_id: number;
      /** Format: int32 */
      zone_population: number;
    };
    PossibleResults: OneOf<[{
      pop: components["schemas"]["PopWorld"][];
    }, {
      error: components["schemas"]["Error"];
    }]>;
    Response: components["schemas"]["PossibleResults"] & Record<string, never>;
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  population: {
    parameters: {
      query?: {
        faction?: number[] | null;
        loadout?: number[] | null;
        team?: number[] | null;
        world?: number[] | null;
        zone?: number[] | null;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["Response"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  prom_metrics: {
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "text/plain": string;
        };
      };
    };
  };
}
